<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icff.tutoring.mapper.AnnouncementMapper" >
<cache type="org.mybatis.caches.ehcache.EhcacheCache"></cache>
  <resultMap id="BaseResultMap" type="com.icff.tutoring.po.Announcement" >
    <id column="annoid" property="annoid" jdbcType="VARCHAR" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="typeid" property="typeid" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="discount" property="discount" jdbcType="DOUBLE" />
    <result column="yxbz" property="yxbz" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    annoid, uuid, typeid,  title, description, discount, yxbz
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.icff.tutoring.po.AnnouncementExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from announcement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from announcement
    where annoid = #{annoid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from announcement
    where annoid = #{annoid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.icff.tutoring.po.AnnouncementExample" >
    delete from announcement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.icff.tutoring.po.Announcement" >
    insert into announcement (annoid, uuid, typeid, 
       title, description, 
      discount, yxbz)
    values (#{annoid,jdbcType=VARCHAR}, #{uuid,jdbcType=VARCHAR}, #{typeid,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{discount,jdbcType=DOUBLE}, #{yxbz,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.icff.tutoring.po.Announcement" >
    insert into announcement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="annoid != null" >
        annoid,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="typeid != null" >
        typeid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="yxbz != null" >
        yxbz,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="annoid != null" >
        #{annoid,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=VARCHAR},
      </if>
     
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DOUBLE},
      </if>
      <if test="yxbz != null" >
        #{yxbz,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.icff.tutoring.po.AnnouncementExample" resultType="java.lang.Integer" >
    select count(*) from announcement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update announcement
    <set >
      <if test="record.annoid != null" >
        annoid = #{record.annoid,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.typeid != null" >
        typeid = #{record.typeid,jdbcType=VARCHAR},
      </if>
     
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=DOUBLE},
      </if>
      <if test="record.yxbz != null" >
        yxbz = #{record.yxbz,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update announcement
    set annoid = #{record.annoid,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      typeid = #{record.typeid,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      discount = #{record.discount,jdbcType=DOUBLE},
      yxbz = #{record.yxbz,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.icff.tutoring.po.Announcement" >
    update announcement
    <set >
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        typeid = #{typeid,jdbcType=VARCHAR},
      </if>
      
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DOUBLE},
      </if>
      <if test="yxbz != null" >
        yxbz = #{yxbz,jdbcType=CHAR},
      </if>
    </set>
    where annoid = #{annoid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.icff.tutoring.po.Announcement" >
    update announcement
    set uuid = #{uuid,jdbcType=VARCHAR},
      typeid = #{typeid,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      discount = #{discount,jdbcType=DOUBLE},
      yxbz = #{yxbz,jdbcType=CHAR}
    where annoid = #{annoid,jdbcType=VARCHAR}
  </update>
  
  <select id="selectByAnnoDto" resultType="com.icff.tutoring.dto.AnnouncementDto" parameterType="com.icff.tutoring.dto.AnnouncementDto">
  select t.teacuuid ,
         a.uuid,
         ar.id,
         sc.scuuid,
         ty.typeid,
         realname,
         u.sex,
         u.headimg,
         u.phone,
         u.email,
         t.price,
         sc.scname,
         a.discount,
         ar.area_describe,
         ty.type_describe 
   from user u,teacher t,announcement a,area ar,tutorialclasstype ty,school sc 
   where u.uuid = t.teacuuid 
         and t.teacuuid = a.uuid 
         and a.typeid = ty.typeid 
         and a.id = ar.id 
         and t.scuuid = sc.scuuid
         and a.yxbz = 'Y' AND ty.yxbz = 'Y' AND a.yxbz = 'Y'  
        <if test="id != null and id != 0">
             AND ar.id = #{id,jdbcType=INTEGER}
        </if>
        <if test="typeid != null and typeid != ''">
           AND ty.typeid =  #{typeid,jdbcType=VARCHAR}
        </if>
         <if test="scuuid != null and scuuid != ''">
          AND sc.scuuid =  #{scuuid,jdbcType=VARCHAR}
        </if>
         <if test="sex != null and sex != 0">
           AND u.sex =  #{sex,jdbcType=INTEGER}
        </if>
  
  </select>
  <select id="selectTeacuuidByAnnoDto" resultType="java.lang.String" parameterType="com.icff.tutoring.dto.AnnouncementDto">
  select distinct t.teacuuid 
   from user u,teacher t,announcement a,area ar,tutorialclasstype ty,school sc 
   where u.uuid = t.teacuuid 
         and t.teacuuid = a.uuid 
         and a.typeid = ty.typeid 
         and a.id = ar.id 
         and t.scuuid = sc.scuuid
         and a.yxbz = 'Y' AND ty.yxbz = 'Y' AND a.yxbz = 'Y'  
        <if test="id != null and id != 0">
             AND ar.id = #{id,jdbcType=INTEGER}
        </if>
        <if test="typeid != null and typeid != ''">
           AND ty.typeid =  #{typeid,jdbcType=VARCHAR}
        </if>
         <if test="scuuid != null and scuuid != ''">
          AND sc.scuuid =  #{scuuid,jdbcType=VARCHAR}
        </if>
         <if test="sex != null and sex != 0">
           AND u.sex =  #{sex,jdbcType=INTEGER}
        </if>
         <if test="teacuuid != null and teacuuid != '' ">
           AND t.teacuuid =  #{teacuuid,jdbcType=INTEGER}
        </if>
  
  </select>
  <select id="selectDtoByteacuuid" resultType="com.icff.tutoring.dto.AnnouncementDto" parameterType="com.icff.tutoring.dto.AnnouncementDto">
   select t.teacuuid ,
         a.uuid,
         ar.id,
         sc.scuuid,
         ty.typeid,
         realname,
         u.sex,
         u.headimg,
         u.phone,
         u.email,
         t.price,
         sc.scname,
         a.discount,
         ar.area_describe,
         ty.type_describe 
   from user u,teacher t,announcement a,area ar,tutorialclasstype ty,school sc 
   where u.uuid = t.teacuuid 
         and t.teacuuid = a.uuid 
         and a.typeid = ty.typeid 
         and a.id = ar.id 
         and t.scuuid = sc.scuuid
         and a.yxbz = 'Y' AND ty.yxbz = 'Y' AND a.yxbz = 'Y'
         and t.teacuuid = #{teacuuid,jdbcType=VARCHAR}
  
  </select>
  <insert id="insertAnnouncementByList" parameterType="java.util.ArrayList">
  insert into announcement 
  (annoid, uuid, typeid, title, description, discount, yxbz,id)
    values 
    <foreach collection="announcements" item="announcement"  separator=",">
     (#{announcement.annoid,jdbcType=VARCHAR}, 
     #{announcement.uuid,jdbcType=VARCHAR}, 
     #{announcement.typeid,jdbcType=VARCHAR}, 
      #{announcement.title,jdbcType=VARCHAR}, 
      <if test="announcement.description !=null">
      #{announcement.description,jdbcType=VARCHAR},
      </if>
      <if test="announcement.description ==null">
      "",
      </if> 
      #{announcement.discount,jdbcType=DOUBLE}, 
      #{announcement.yxbz,jdbcType=CHAR},
      #{announcement.id,jdbcType=INTEGER}
      )
    </foreach>
  </insert>
  
</mapper>